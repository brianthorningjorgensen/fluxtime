<?php

namespace DoctrineORMModule\Proxy\__CG__\Fluxuser\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Task extends \Fluxuser\Entity\Task implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'taskid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'secondid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'taskname', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'state', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'status', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'points', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'tasktype', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'description', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkcreator', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkprojectid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fklabelid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkaccountid');
        }

        return array('__isInitialized__', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'taskid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'secondid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'taskname', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'state', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'status', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'points', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'tasktype', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'description', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkcreator', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkprojectid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fklabelid', '' . "\0" . 'Fluxuser\\Entity\\Task' . "\0" . 'fkaccountid');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Task $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTaskid()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getTaskid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaskid', array());

        return parent::getTaskid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecondid($secondid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecondid', array($secondid));

        return parent::setSecondid($secondid);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecondid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecondid', array());

        return parent::getSecondid();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaskname($taskname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaskname', array($taskname));

        return parent::setTaskname($taskname);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaskname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaskname', array());

        return parent::getTaskname();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoints($points)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoints', array($points));

        return parent::setPoints($points);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoints()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoints', array());

        return parent::getPoints();
    }

    /**
     * {@inheritDoc}
     */
    public function setTasktype($tasktype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTasktype', array($tasktype));

        return parent::setTasktype($tasktype);
    }

    /**
     * {@inheritDoc}
     */
    public function getTasktype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTasktype', array());

        return parent::getTasktype();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkcreator(\Fluxuser\Entity\FluxUser $fkcreator = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkcreator', array($fkcreator));

        return parent::setFkcreator($fkcreator);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkcreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkcreator', array());

        return parent::getFkcreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkprojectid(\Fluxuser\Entity\Project $fkprojectid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkprojectid', array($fkprojectid));

        return parent::setFkprojectid($fkprojectid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkprojectid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkprojectid', array());

        return parent::getFkprojectid();
    }

    /**
     * {@inheritDoc}
     */
    public function setFklabelid(\Fluxuser\Entity\Projectlabel $fklabelid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFklabelid', array($fklabelid));

        return parent::setFklabelid($fklabelid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFklabelid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFklabelid', array());

        return parent::getFklabelid();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkaccountid(\Fluxuser\Entity\Systemaccount $fkaccountid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkaccountid', array($fkaccountid));

        return parent::setFkaccountid($fkaccountid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkaccountid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkaccountid', array());

        return parent::getFkaccountid();
    }

}
